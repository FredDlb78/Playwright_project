name: Playwright CI with Slack
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    - cron: '0 6 * * 1' # Tous les lundis √† 6h

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install browsers
        run: npx playwright install --with-deps
      
      - name: Install jq (for test stats)
        run: sudo apt-get install -y jq
        if: runner.os == 'Linux'
      
      - name: Run tests and extract stats
        id: run-tests
        run: |
          # G√©n√®re le rapport JSON et extrait les stats
          TEST_RESULTS=$(npx playwright test --reporter=json | jq -c '.stats')
          PASSED=$(echo $TEST_RESULTS | jq '.passed')
          FAILED=$(echo $TEST_RESULTS | jq '.failed')
          
          # Cr√©e le lien de rapport final
          REPORT_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          
          echo "passed=$PASSED" >> $GITHUB_OUTPUT
          echo "failed=$FAILED" >> $GITHUB_OUTPUT
          echo "report-url=$REPORT_URL" >> $GITHUB_OUTPUT
          echo "status=$(( $FAILED > 0 ? 1 : 0 ))" >> $GITHUB_OUTPUT
          echo "REPORT_URL=$REPORT_URL" >> $GITHUB_ENV
      
      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
      
      - name: Notify Slack
        if: always()
        uses: slackapi/slack-github-action@v1.25.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: |
            {
              "text": "üöÄ R√©sultats des tests Playwright (${{ github.event_name == 'schedule' && 'Planifi√©' || 'D√©clench√©' }}) - ${{ github.repository }} (${{ github.ref_name }}) - ${{ steps.run-tests.outputs.status == '0' && '‚úÖ Succ√®s' || '‚ùå √âchec' }} - Rapport: ${{ env.REPORT_URL }}",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üîç Tests Playwright - ${{ github.event_name == 'schedule' && '‚è∞ Planifi√©' || '‚ö° D√©clench√©' }}",
                    "emoji": true
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Statut:*\n${{ steps.run-tests.outputs.status == '0' && '‚úÖ Succ√®s' || '‚ùå √âchec' }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Tests:*\n‚úÖ ${{ steps.run-tests.outputs.passed }} | ‚ùå ${{ steps.run-tests.outputs.failed }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*D√©p√¥t:*\n`${{ github.repository }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branche:*\n`${{ github.ref_name }}`"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*üìä Rapport complet:*\n<${{ env.REPORT_URL }}|Voir sur GitHub>"
                  }
                }
              ]
            }