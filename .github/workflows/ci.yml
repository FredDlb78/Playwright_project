name: Playwright CI with Slack
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install browsers and tools
        run: |
          npx playwright install --with-deps
          sudo apt-get install -y jq
      
      - name: Run tests and process results
        id: run-tests
        run: |
          # Ex√©cute les tests et capture le statut
          npx playwright test || true
          
          # Traite les r√©sultats
          if [ -f "test-results/json-results.json" ]; then
            PASSED=$(jq '.stats.passed' test-results/json-results.json)
            FAILED=$(jq '.stats.failed' test-results/json-results.json)
          else
            PASSED=0
            FAILED=1
          fi
          
          echo "passed=$PASSED" >> $GITHUB_OUTPUT
          echo "failed=$FAILED" >> $GITHUB_OUTPUT
          echo "status=$(( $FAILED > 0 ? 1 : 0 ))" >> $GITHUB_OUTPUT
          echo "REPORT_URL=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV
      
      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report
          path: test-results/html-report/
      
      - name: Upload JSON results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-json-results
          path: test-results/json-results.json
      
      - name: Notify Slack
        if: always()
        uses: slackapi/slack-github-action@v1.25.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: |
            {
              "text": "üöÄ R√©sultats des tests - ${{ github.repository }} (${{ github.ref_name }}) - ${{ steps.run-tests.outputs.status == '0' && '‚úÖ Succ√®s' || '‚ùå √âchec' }} - ${{ steps.run-tests.outputs.passed }}‚úÖ ${{ steps.run-tests.outputs.failed }}‚ùå - Rapport: ${{ env.REPORT_URL }}",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üìä Rapport Playwright",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Statut:*\n${{ steps.run-tests.outputs.status == '0' && '‚úÖ Succ√®s' || '‚ùå √âchec' }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*R√©sultats:*\n${{ steps.run-tests.outputs.passed }} ‚úÖ | ${{ steps.run-tests.outputs.failed }} ‚ùå"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*D√©p√¥t:*\n`${{ github.repository }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branche:*\n`${{ github.ref_name }}`"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Voir le rapport complet",
                        "emoji": true
                      },
                      "url": "${{ env.REPORT_URL }}"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Rapport HTML",
                        "emoji": true
                      },
                      "url": "${{ env.REPORT_URL }}/artifacts"
                    }
                  ]
                }
              ]
            }